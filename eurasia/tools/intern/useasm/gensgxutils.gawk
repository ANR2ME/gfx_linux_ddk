#
# Name         : gensgxutils.c
# Title        : USSE assembler helper script
# Author       : David Welch
# Created      : Jan 2002
#
# Copyright    : 2002-2011 by Imagination Technologies Limited. All rights reserved.
#              : No part of this software, either material or conceptual 
#              : may be copied or distributed, transmitted, transcribed,
#              : stored in a retrieval system or translated into any 
#              : human or computer language in any form by any means,
#              : electronic, mechanical, manual or other-wise, or 
#              : disclosed to third parties without the express written
#              : permission of Imagination Technologies Limited, Unit 8, HomePark
#              : Industrial Estate, King's Langley, Hertfordshire,
#              : WD4 8LZ, U.K.
#
#
# Modifications:-
# $Log: gensgxutils.gawk $
# Revision 1.3  2011/01/13 10:44:07  david.welch
# Remove GNU extensions from gawk scripts.
#


function start_core(core_name) {
	if (core_defined == 1)
	{
		print "#endif /* defined(SUPPORT_SGX" current_core_name ") */"
	}
	current_core_name = core_name;
	print "#if defined(SUPPORT_SGX" current_core_name ")";
	core_defined = 1;
}

function start_revision(revision_num, revision_name) {
	revision_defined = 1;
	print "\t{\t/* " current_core_name " " revision_name " */";
	print "\t\tSGX_CORE_ID_" current_core_name ",\t\t\t\t\t\t\t\t/* eCoreType */";
	print "\t\t" revision_num ",\t\t\t\t\t\t\t\t\t\t\t/* ui32CoreRevision */";
	print "\t\t{\t\t\t\t\t\t\t\t\t\t\t\t/* sBugs */";
	first_bug = 1;
}

BEGIN {
	#
	# Generate the output file prolog.
	#
	print "/* Autogenerated: don't edit. */";
	print "#ifndef __USEASM_UTILS_H_"
	print "#define __USEASM_UTILS_H_"
	print "";
	print "static const SGX_CORE_DESC g_sUseasmCoreTable[] ="
	print "{"
	
	
	core_defined = 0;
	revision_defined = 0;
	
	#
	# Scan the input file looking for lines defining 
	#
	for (;;) {
		ret = getline line < ARGV[1];
		# Break on end of file
		if (ret <= 0) {
			break;
		}
		if (line ~ /#define SGX_BUG_FLAGS_FIX_HW_BRN_[[:digit:]]+/) {
			split(line, line_fields);
			defined_brn = substr(line_fields[2], 26);
			defined_brns[defined_brn] = 1;
		}
	} 
}

/#if defined\(SGX[[:digit:]]*\) && !defined\(SGX_CORE_DEFINED\)/ {
	start_core(substr($2, 12, 3));
}

/#if \(defined\(SGX535\) \|\| defined\(SGX535_V1_1\)\) && !defined\(SGX_CORE_DEFINED\)/ {
	start_core(535);
}

/#define[[:space:]]+FIX_HW_BRN_[[:digit:]]+/ {
	if (revision_defined == 1) {
		#
		# Extract just the BRN from the name of the define.
		#
		brn = $2;
		gsub(/[^[:digit:]]/, "", brn);   # Modifies brn
		
		#
		# Is this a BRN that the usc/useasm is interested in?
		#
		if (defined_brns[brn] == 1) {
			if (first_bug == 0) {
				printf " |\n";
			}
			printf "\t\t\tSGX_BUG_FLAGS_FIX_HW_BRN_" brn;
			first_bug = 0;
		}
	}
}

/#if SGX_CORE_REV == [[:digit:]]+/ {
	start_revision($4, $4 " revision");
}

/#if SGX_CORE_REV == SGX_CORE_REV_HEAD/ {
	start_revision(0, "head revision");
}

/#else/ {
	if (revision_defined == 1) {
		if (first_bug == 1) {
			print "\t\t\t0,";
		} else {
			printf ",\n";
		}
		print "\t\t},";
		print "\t\t&g_sSGX" current_core_name "_Features_Table,\t\t\t\t\t\t/* psFeatures */";
		print "\t},";
		revision_defined = 0;
	}
}

END {
	if (core_defined == 1)
	{
		print "#endif /* defined(SUPPORT_SGX" current_core_name ") */"
	}
	print "};";
	print "#endif /* __USEASM_UTILS_H_ */";
}